{"version":3,"sources":["services/storage/LocalStorageAdapter.js","services/storage/StorageAdapter.js","store/index.js","components/TodoListItem.js","components/TodoList.js","components/SearchPanel.js","components/TodoFilter.js","components/TodoItemAdd.js","utils/index.js","components/App.js","index.js"],"names":["LocalStorageAdapter","str","localStorage","getItem","this","name","length","JSON","parse","data","setItem","stringify","Error","initialItems","id","title","important","completed","TodoListItem","props","handleItemDelete","handleItemComplete","handleMarkImportant","classNames","className","data-testid","onClick","type","Component","TodoList","items","elements","map","item","itemProps","key","SearchPanel","searchText","handleSearch","placeholder","value","onChange","e","target","TodoFilter","handleFilterChange","filter","createButton","text","filterValue","TodoItemAdd","state","handleInputChange","s","setState","charAt","toUpperCase","slice","handleSubmit","preventDefault","trim","handleItemAdd","onSubmit","App","deleteItem","addItem","newItem","reduce","acc","curr","concat","updateItemFlag","flagName","markItemComplete","markItemImportant","search","getStats","remaining","getFilteredItems","toLowerCase","match","indexOf","storage","loadData","debouncedSaveData","debounce","saveData","nextProps","nextState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75571d0d.chunk.js","sourcesContent":["import StorageAdapter from './StorageAdapter'\r\n\r\n\r\nclass LocalStorageAdapter extends StorageAdapter {\r\n  loadData() {\r\n    const str = localStorage.getItem(this.name)\r\n    if (str === null || str.length === 0) {\r\n      return null\r\n    }\r\n    return JSON.parse(str)\r\n  }\r\n\r\n  saveData(data) {\r\n    localStorage.setItem(this.name, JSON.stringify(data))\r\n  }\r\n}\r\n\r\nexport default LocalStorageAdapter\r\n","class StorageAdapter {\r\n  constructor(name) {\r\n    this.name = name\r\n  }\r\n\r\n  loadData() {\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  saveData(data) {\r\n    throw new Error('Not implemented')\r\n  }\r\n}\r\n\r\nexport default StorageAdapter\r\n","export const initialItems = [\r\n  {\r\n    id: 1,\r\n    title: 'Buy coffee beans',\r\n    important: false,\r\n    completed: true\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Buy a milk',\r\n    important: false,\r\n    completed: false\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Make a coffee',\r\n    important: true,\r\n    completed: false\r\n  }\r\n]\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './TodoListItem.css'\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n  \r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    important: PropTypes.bool,\r\n    completed: PropTypes.bool,\r\n    handleItemDelete: PropTypes.func.isRequired,\r\n    handleItemComplete: PropTypes.func.isRequired,\r\n    handleMarkImportant: PropTypes.func.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { title, important = false, completed = false, \r\n            handleItemDelete, handleItemComplete, handleMarkImportant \r\n          } = this.props\r\n\r\n    let classNames = 'todo-list-item'\r\n    if (important) {\r\n      classNames += ' important'\r\n    }\r\n    if (completed) {\r\n      classNames += ' completed'\r\n    }\r\n\r\n    return(\r\n      <div className={ classNames } data-testid=\"todo-list-item\">\r\n        <div className=\"title\" onClick={ handleItemComplete }>{ title }</div>\r\n        <div className=\"buttons\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            data-testid=\"todo-list-mark-important\"\r\n            onClick={ handleMarkImportant }\r\n          >\r\n            <i className=\"fa fa-exclamation\"></i>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm\"\r\n            data-testid=\"todo-list-delete\"\r\n            onClick={ handleItemDelete }\r\n          >\r\n            <i className=\"fa fa-trash-o\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoListItem from './TodoListItem'\r\nimport './TodoList.css'\r\n\r\nconst TodoList = ({ items, handleItemDelete, handleItemComplete, handleMarkImportant }) => {\r\n  const elements = items.map( item => {\r\n    \r\n    const { id, ...itemProps } = item\r\n\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          { ...itemProps }\r\n          handleItemDelete={ () => handleItemDelete(id) }\r\n          handleItemComplete={ () => handleItemComplete(id) }\r\n          handleMarkImportant={ () => handleMarkImportant(id) }\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      { elements }\r\n    </ul>\r\n  )\r\n}\r\n\r\nTodoList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  handleItemDelete: PropTypes.func.isRequired,\r\n  handleItemComplete: PropTypes.func.isRequired,\r\n  handleMarkImportant: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\n\r\nexport default function SearchPanel({ searchText, handleSearch }) {\r\n  return (\r\n    <div className=\"search-panel\" data-testid=\"search-panel\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Type to search\"\r\n        className=\"form-control\"\r\n        value={ searchText }\r\n        onChange={ (e) => handleSearch(e.target.value) }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './TodoFilter.css'\r\n\r\n\r\nexport default function TodoFilter({\r\n  handleFilterChange,\r\n  filter\r\n}) {\r\n\r\n  const createButton = (text, filterValue) => {\r\n    const current = filterValue === filter\r\n\r\n    let classNames = 'btn'\r\n    if (current) {\r\n      classNames += ' btn-info'\r\n    } else {\r\n      classNames += ' btn-outline-secondary'\r\n    }\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={ classNames }\r\n        onClick={ () => handleFilterChange( filterValue ) }\r\n      >{ text }</button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-filter\" data-testid=\"todo-filter\">\r\n      { createButton('All', 'all') }\r\n      { createButton('Active', 'active') }\r\n      { createButton('Done', 'done') }\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { capitalize } from '../utils'\r\n\r\n\r\nexport default class TodoItemAdd extends Component {\r\n  static propTypes = {\r\n    handleItemAdd: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    title: ''\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      title: capitalize(e.target.value)\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const title = this.state.title.trim()\r\n    if (title.length) {\r\n      this.props.handleItemAdd(title)\r\n      this.setState({ title: '' })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title } = this.state\r\n\r\n    return (\r\n      <form className=\"todo-item-add row\" onSubmit={ this.handleSubmit } data-testid=\"todo-item-add\">\r\n        <div className=\"col-12 col-md-8\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"form-control mb-2\"\r\n            placeholder=\"Type and hit Enter to add\"\r\n            value={ title }\r\n            onChange={ this.handleInputChange }\r\n            data-testid=\"todo-item-add-input\"\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md-4\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-outline-secondary\"\r\n          >Add Item</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n","export function capitalize(s) {\r\n  if (typeof s !== 'string') return ''\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n","import React, { Component } from 'react'\r\nimport LocalStorageAdapter from '../services/storage/LocalStorageAdapter'\r\nimport { debounce } from 'lodash'\r\nimport { initialItems } from '../store'\r\nimport TodoList from './TodoList'\r\nimport SearchPanel from './SearchPanel'\r\nimport TodoFilter from './TodoFilter'\r\nimport TodoItemAdd from './TodoItemAdd'\r\nimport './App.css'\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.storage = new LocalStorageAdapter('todo-list')\r\n    let data = this.storage.loadData()\r\n    if (!data) {\r\n      this.state = {\r\n        items: initialItems,\r\n        search: '',\r\n        filter: 'all'\r\n      }\r\n    } else {\r\n      this.state = {\r\n        items: data.items,\r\n        search: data.search,\r\n        filter: data.filter\r\n      }\r\n    }\r\n\r\n    this.debouncedSaveData = debounce(() => {\r\n      this.storage.saveData(this.state)\r\n    }, 250)\r\n  }\r\n\r\n  componentDidUpdate(nextProps, nextState) {\r\n    if (this.state !== nextState) {\r\n      this.debouncedSaveData()\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState( ({ items }) => {\r\n      return {\r\n        items: items.filter( item => item.id !== id)\r\n      }\r\n    })\r\n  }\r\n\r\n  addItem = (title) => {\r\n    this.setState( ({ items }) => {\r\n      const maxId = items.reduce((acc, curr) => {\r\n        return(curr.id > acc ? curr.id : acc)\r\n      }, 0)\r\n      const newItem = {\r\n        id: maxId + 1,\r\n        title,\r\n        important: false,\r\n        completed: false\r\n      }\r\n      return {\r\n        items: items.concat(newItem) \r\n      }\r\n    })\r\n  }\r\n\r\n  updateItemFlag = (id, flagName) => {\r\n    this.setState( ({ items }) => {\r\n      const updatedItems = items.map( item => {\r\n        if (item.id === id) {\r\n          return {\r\n            ...item,\r\n            [flagName]: !item[flagName]\r\n          }\r\n        }\r\n        return item\r\n      })\r\n\r\n      return {\r\n        items: updatedItems\r\n      }\r\n    })\r\n  }\r\n\r\n  markItemComplete = (id) => {\r\n    this.updateItemFlag(id, 'completed')\r\n  }\r\n\r\n  markItemImportant = (id) => {\r\n    this.updateItemFlag(id, 'important')\r\n  }\r\n  \r\n  handleSearch = (text) => {\r\n    this.setState({\r\n      search: text\r\n    })\r\n  }\r\n\r\n  handleFilterChange = (filter) => {\r\n    this.setState({\r\n      filter\r\n    })\r\n  }\r\n\r\n  getStats = () => {\r\n    const { items } = this.state\r\n    const completed = items.reduce((acc, curr) => {\r\n      return(curr.completed ? acc + 1 : acc)\r\n    }, 0)\r\n\r\n    const remaining = items.length - completed\r\n    return { completed, remaining }\r\n  }\r\n\r\n  getFilteredItems = () => {\r\n    const { search, filter, items } = this.state\r\n    const searchText = search.trim().toLowerCase()\r\n\r\n    return items.filter( item => {\r\n      let match = true\r\n\r\n      switch (filter) {\r\n        case 'active':\r\n          if (item.completed) {\r\n            match = false\r\n          }\r\n          break\r\n        case 'done':\r\n          if (!item.completed) {\r\n            match = false\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n\r\n      if (searchText.length) {\r\n        if (item.title\r\n          .toLowerCase()\r\n          .indexOf(searchText) === -1) \r\n        {\r\n          match = false\r\n        }\r\n      }\r\n\r\n      return match\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { search, filter } = this.state\r\n    const { completed, remaining } = this.getStats()\r\n    const items = this.getFilteredItems()\r\n\r\n    return(\r\n      <div id=\"app\" className=\"app row\">\r\n        <div className=\"col-12 offset-0 col-lg-6 offset-lg-3 \">\r\n          <header className=\"row\">\r\n            <h1 className=\"title col-12 col-md-6\">\r\n              Todo List\r\n            </h1>\r\n            <div className=\"stats col-12 col-md-6\">\r\n              { remaining ? `${remaining} more to do` : 'Nothing to do' }, { completed } done\r\n            </div>\r\n          </header>\r\n          <div className=\"filters row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <SearchPanel handleSearch={ this.handleSearch } searchText={ search } />\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <TodoFilter handleFilterChange={ this.handleFilterChange } filter={ filter } />\r\n            </div>\r\n          </div>\r\n            <TodoList items={items}\r\n              handleItemDelete={ this.deleteItem }\r\n              handleItemComplete={ this.markItemComplete }\r\n              handleMarkImportant={ this.markItemImportant }\r\n            />\r\n            <TodoItemAdd handleItemAdd={ this.addItem } />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}